#+STARTUP: showeverything

* Todo [25/30] [83%]
  1. [X] Implement unit tests
  2. [X] urlparser: Getters and Setters: username, password
  3. [X] urlparser: Getters and Setters: port, hostname
  4. [X] urlbuilder: Getters and Setters: username, password
  5. [X] urlbuilder: Getters and Setters: port, hostname
  6. [X] Have Getters and Setters return None instead of returning ""
  7. [X] Make the urlerror.py classes
  8. [X] Instead of always returning the url in the form of a string, return it as a 'URL' object
  9. [X] In constructor has a parameter that is instanceof(self), continue with new constructor type
  10. [X] Remake the robotparser.py script from urllib
      1. [X] parse()
      2. [X] is_allowed()
      3. [X] is_disallowed()
      4. [X] request_rate directive
      5. [X] sitemap directive
      6. [X] crawl-delay directive
      7. [X] get_request_rate()
      8. [X] get_crawl_delay()
      9. [X] get_sitemap()
  11. [X] unittest for robotparser.py
  12. [X] linter for robotparser.py
  13. [X] Convert entire module to PyPI and then upload to PyPI
  14. [X] Play around with regex in urlformat python files
  15. [X] fix "import urlerrors" to work when imported in urlparser and urlbuilder
  16. [X] Put UnbuiltURLError into urlbuilder.build()
  17. [X] fix importing from "import urlformat.urlformat.urlparser as urlparser" to "from urlformat import UrlParser"
  18. [X] As of python3.3, __init__.py files can be removed completely (https://www.python.org/dev/peps/pep-0420/)
  19. [X] move linter.sh to /urlformat instead of /urlformat/urlformat and update it
  20. [X] Make a wiki on how to use this module; after converting and uploading to PyPI
  21. [ ] Make a SiteMap parser class (sitemapparser.py)
  22. [ ] linter for sitemapparser.py
  23. [ ] unittest for sitemapparser.py
  24. [X] Reimplement the urlerrors file and error types
  25. [X] Implement speed testings for python urlparser, urlbuilder, robotparser
  26. [ ] Implement .c files for urlparser, urlbuilder, robotparser, sitemapparser
  27. [ ] Implement speed testings for C bindings of urlparser, urlbuilder, robotparser, sitemapparser
  28. [X] linter.sh/test.sh
      1. [X] Add bash script arguments to only apply yapf linting when wanted
      2. [X] Add bash script to itterate over all python files and format them
  29. [X] Change ALL return types to be the same throughout the function, for all functions. That is, a function should only return True or False, or a String, never a "String or None"
  30. [X] Move the files urltester.py and urlspeedtester.py to the above directory (same as linter.sh)
